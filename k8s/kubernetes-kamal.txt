cluster formation
=========================
Hardware : 1 - master ,  1,2 - worker
1.system name
2.ip address
3.check the communication between all nodes
4. yum update
5. vi /etc/hosts   --- name resolution 
6. docker installation : 
   a. getting the docker repo -  
      sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo
   b. yum list docker-ce --showduplicates | sort -r            --- optional
   c. yum install docker-ce-19.03.6-3.el7 docker-ce-cli-19.03.6-3.el7 containerd.io docker-compose-plugin
   d. systemctl start docker
   e. systemctl enable docker
7. vi /usr/lib/systemd/system/docker.service add this(--exec-opt native.cgroupdriver=systemd)
    a. systemctl restart docker
     b. systemctl daemon-reload
8. vi /etc/modules-load.d/k8s.conf
9. vi /etc/sysctl.d/k8s.conf
10. sysctl --system
11. selinux = off , firewall = off
    systemctl stop firewalld
    systemctl disable firewalld
12. vi /etc/sysconfig/selinux
13 . create a repo file /etc/yum.repos.d/k8s.repo

[KubernetesRepository]
name=Kubernetes Repository working
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
#gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg


:wq!
yum repolist all
14. yum install -y kubelet-1.22.0-0 kubeadm-1.22.0-0 kubectl-1.22.0-0
15.  systemctl start kubelet
     systemctl enable kubelet
     systemctl status kubelet
16. echo '1' > /proc/sys/net/bridge/bridge-nf-call-iptables
17. echo '1' > /proc/sys/net/ipv4/ip_forward

===========================same steps on master and worker==========================

18. kubeadm init               -- to initialize the kubernetes master in the cluster
19.  mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

20.kubectl get nodes




